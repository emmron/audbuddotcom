---
import Header from '../components/Header.astro';
import { supabase } from '../lib/supabase';
import type { Strain } from '../types/supabase';

// Fetch strains from Supabase with error handling and type safety
const { data: strains, error } = await supabase
  .from('strains')
  .select('*')
  .order('name');

if (error) {
  console.error('Error fetching strains:', error);
}
---

<Header />

<main class="strains-page">
  <section class="hero">
    <h1>Cannabis Strains Library</h1>
    <p>Discover detailed profiles of medicinal cannabis strains, their effects, and therapeutic properties</p>
  </section>

  <div class="strains-grid">
    {strains?.map((strain: Strain) => (
      <article class="strain-card">
        <div class="strain-content">
          <header class="strain-header">
            <h2>{strain.name}</h2>
            <div class="strain-badges">
              <span class="badge type">{strain.type}</span>
              {strain.thc && <span class="badge thc">THC: {strain.thc}%</span>}
              {strain.cbd && <span class="badge cbd">CBD: {strain.cbd}%</span>}
            </div>
          </header>

          <p class="strain-description">{strain.description}</p>

          {strain.effects && strain.effects.length > 0 && (
            <div class="strain-effects">
              <h3>Primary Effects</h3>
              <div class="effects-tags">
                {strain.effects.map((effect: string) => (
                  <span class="effect-tag">{effect}</span>
                ))}
              </div>
            </div>
          )}
        </div>
      </article>
    ))}
  </div>
</main>

<style>
  .strains-page {
    max-width: 1400px;
    margin: 0 auto;
    padding: 2rem;
  }

  .hero {
    text-align: center;
    margin-bottom: 4rem;
    padding: 4rem 0;
    background: linear-gradient(to bottom, var(--color-primary-50), transparent);
    border-radius: 1rem;
  }

  .hero h1 {
    font-size: 3rem;
    font-weight: 800;
    color: var(--color-gray-900);
    margin-bottom: 1rem;
  }

  .hero p {
    font-size: 1.25rem;
    color: var(--color-gray-600);
    max-width: 600px;
    margin: 0 auto;
  }

  .strains-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
  }

  .strain-card {
    background: white;
    border-radius: 1rem;
    overflow: hidden;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s ease;
    padding: 1.5rem;
  }

  .strain-card:hover {
    transform: translateY(-4px);
  }

  .strain-header {
    margin-bottom: 1rem;
  }

  .strain-header h2 {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--color-gray-900);
    margin-bottom: 0.75rem;
  }

  .strain-badges {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }

  .badge {
    padding: 0.25rem 0.75rem;
    border-radius: 9999px;
    font-size: 0.875rem;
    font-weight: 500;
  }

  .badge.type {
    background: var(--color-primary-100);
    color: var(--color-primary-700);
  }

  .badge.thc {
    background: var(--color-green-100);
    color: var(--color-green-700);
  }

  .badge.cbd {
    background: var(--color-blue-100);
    color: var(--color-blue-700);
  }

  .strain-description {
    color: var(--color-gray-600);
    margin-bottom: 1.5rem;
    line-height: 1.5;
  }

  .strain-effects h3 {
    font-size: 1rem;
    font-weight: 600;
    color: var(--color-gray-900);
    margin-bottom: 0.75rem;
  }

  .effects-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .effect-tag {
    padding: 0.25rem 0.75rem;
    background: var(--color-gray-100);
    color: var(--color-gray-700);
    border-radius: 9999px;
    font-size: 0.875rem;
  }

  @media (max-width: 768px) {
    .strains-page {
      padding: 1rem;
    }

    .hero {
      padding: 2rem 1rem;
    }

    .hero h1 {
      font-size: 2rem;
    }

    .hero p {
      font-size: 1rem;
    }

    .strains-grid {
      grid-template-columns: 1fr;
    }
  }
</style>